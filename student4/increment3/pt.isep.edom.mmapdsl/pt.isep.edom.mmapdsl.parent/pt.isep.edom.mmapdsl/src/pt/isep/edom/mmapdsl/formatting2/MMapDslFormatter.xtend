/*
 * generated by Xtext 2.12.0
 */
package pt.isep.edom.mmapdsl.formatting2

import com.google.inject.Inject
import mindmap.Map
import mindmap.MapElement
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import pt.isep.edom.mmapdsl.services.MMapDslGrammarAccess
import mindmap.Topic

class MMapDslFormatter extends AbstractFormatter2 {

	@Inject extension MMapDslGrammarAccess

	def dispatch void format(Map map, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		
		val open = map.regionFor.keyword(mapAccess.leftCurlyBracketKeyword_4_1)
		val close = map.regionFor.keyword(mapAccess.rightCurlyBracketKeyword_4_4)
		open.append[newLine]
		interior(open, close)[indent]

		for (MapElement mapElement : map.getElements()) {
			mapElement.format
			mapElement.append[newLine]
		}
	}

	// TODO: implement for 
	def dispatch void format(Topic topic, extension IFormattableDocument document) {
		val open = topic.regionFor.keyword("{")
		val close = topic.regionFor.keyword("}")
		open.append[newLine]
		interior(open, close)[indent]
	}
}
