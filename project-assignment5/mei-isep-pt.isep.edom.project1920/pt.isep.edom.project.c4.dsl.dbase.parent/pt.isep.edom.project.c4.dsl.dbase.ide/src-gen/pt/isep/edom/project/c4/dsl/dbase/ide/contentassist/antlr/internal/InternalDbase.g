/*
 * generated by Xtext 2.12.0
 */
grammar InternalDbase;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package pt.isep.edom.project.c4.dsl.dbase.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package pt.isep.edom.project.c4.dsl.dbase.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import pt.isep.edom.project.c4.dsl.dbase.services.DbaseGrammarAccess;

}
@parser::members {
	private DbaseGrammarAccess grammarAccess;

	public void setGrammarAccess(DbaseGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDbaseModel
entryRuleDbaseModel
:
{ before(grammarAccess.getDbaseModelRule()); }
	 ruleDbaseModel
{ after(grammarAccess.getDbaseModelRule()); } 
	 EOF 
;

// Rule DbaseModel
ruleDbaseModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDbaseModelAccess().getGroup()); }
		(rule__DbaseModel__Group__0)
		{ after(grammarAccess.getDbaseModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable
entryRuleTable
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableAccess().getGroup()); }
		(rule__Table__Group__0)
		{ after(grammarAccess.getTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumn
entryRuleColumn
:
{ before(grammarAccess.getColumnRule()); }
	 ruleColumn
{ after(grammarAccess.getColumnRule()); } 
	 EOF 
;

// Rule Column
ruleColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnAccess().getGroup()); }
		(rule__Column__Group__0)
		{ after(grammarAccess.getColumnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraint
entryRuleConstraint
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintAccess().getGroup()); }
		(rule__Constraint__Group__0)
		{ after(grammarAccess.getConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationship
entryRuleRelationship
:
{ before(grammarAccess.getRelationshipRule()); }
	 ruleRelationship
{ after(grammarAccess.getRelationshipRule()); } 
	 EOF 
;

// Rule Relationship
ruleRelationship 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipAccess().getGroup()); }
		(rule__Relationship__Group__0)
		{ after(grammarAccess.getRelationshipAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ColumnType
ruleColumnType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTypeAccess().getAlternatives()); }
		(rule__ColumnType__Alternatives)
		{ after(grammarAccess.getColumnTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ConstraintType
ruleConstraintType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintTypeAccess().getAlternatives()); }
		(rule__ConstraintType__Alternatives)
		{ after(grammarAccess.getConstraintTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule CardinalityType
ruleCardinalityType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardinalityTypeAccess().getAlternatives()); }
		(rule__CardinalityType__Alternatives)
		{ after(grammarAccess.getCardinalityTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTypeAccess().getVARCHAREnumLiteralDeclaration_0()); }
		('VARCHAR')
		{ after(grammarAccess.getColumnTypeAccess().getVARCHAREnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTypeAccess().getINTEGEREnumLiteralDeclaration_1()); }
		('INTEGER')
		{ after(grammarAccess.getColumnTypeAccess().getINTEGEREnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTypeAccess().getREALEnumLiteralDeclaration_2()); }
		('REAL')
		{ after(grammarAccess.getColumnTypeAccess().getREALEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTypeAccess().getBOOLEnumLiteralDeclaration_3()); }
		('BOOL')
		{ after(grammarAccess.getColumnTypeAccess().getBOOLEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintTypeAccess().getPKEnumLiteralDeclaration_0()); }
		('PK')
		{ after(grammarAccess.getConstraintTypeAccess().getPKEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintTypeAccess().getUNIQUEEnumLiteralDeclaration_1()); }
		('UNIQUE')
		{ after(grammarAccess.getConstraintTypeAccess().getUNIQUEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintTypeAccess().getNOTNULLEnumLiteralDeclaration_2()); }
		('NOTNULL')
		{ after(grammarAccess.getConstraintTypeAccess().getNOTNULLEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintTypeAccess().getFKEnumLiteralDeclaration_3()); }
		('FK')
		{ after(grammarAccess.getConstraintTypeAccess().getFKEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CardinalityType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCardinalityTypeAccess().getOneToOneEnumLiteralDeclaration_0()); }
		('OneToOne')
		{ after(grammarAccess.getCardinalityTypeAccess().getOneToOneEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCardinalityTypeAccess().getOneToManyEnumLiteralDeclaration_1()); }
		('OneToMany')
		{ after(grammarAccess.getCardinalityTypeAccess().getOneToManyEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCardinalityTypeAccess().getManyToManyEnumLiteralDeclaration_2()); }
		('ManyToMany')
		{ after(grammarAccess.getCardinalityTypeAccess().getManyToManyEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DbaseModel__Group__0__Impl
	rule__DbaseModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDbaseModelAccess().getDbaseModelAction_0()); }
	()
	{ after(grammarAccess.getDbaseModelAccess().getDbaseModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DbaseModel__Group__1__Impl
	rule__DbaseModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDbaseModelAccess().getDbaseModelKeyword_1()); }
	'DbaseModel'
	{ after(grammarAccess.getDbaseModelAccess().getDbaseModelKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DbaseModel__Group__2__Impl
	rule__DbaseModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDbaseModelAccess().getNameAssignment_2()); }
	(rule__DbaseModel__NameAssignment_2)
	{ after(grammarAccess.getDbaseModelAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DbaseModel__Group__3__Impl
	rule__DbaseModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDbaseModelAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getDbaseModelAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DbaseModel__Group__4__Impl
	rule__DbaseModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDbaseModelAccess().getGroup_4()); }
	(rule__DbaseModel__Group_4__0)?
	{ after(grammarAccess.getDbaseModelAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DbaseModel__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDbaseModelAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getDbaseModelAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DbaseModel__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DbaseModel__Group_4__0__Impl
	rule__DbaseModel__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDbaseModelAccess().getTablesKeyword_4_0()); }
	'tables'
	{ after(grammarAccess.getDbaseModelAccess().getTablesKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DbaseModel__Group_4__1__Impl
	rule__DbaseModel__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDbaseModelAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getDbaseModelAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DbaseModel__Group_4__2__Impl
	rule__DbaseModel__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDbaseModelAccess().getTablesAssignment_4_2()); }
	(rule__DbaseModel__TablesAssignment_4_2)
	{ after(grammarAccess.getDbaseModelAccess().getTablesAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DbaseModel__Group_4__3__Impl
	rule__DbaseModel__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDbaseModelAccess().getGroup_4_3()); }
	(rule__DbaseModel__Group_4_3__0)*
	{ after(grammarAccess.getDbaseModelAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DbaseModel__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDbaseModelAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getDbaseModelAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DbaseModel__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DbaseModel__Group_4_3__0__Impl
	rule__DbaseModel__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDbaseModelAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getDbaseModelAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DbaseModel__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDbaseModelAccess().getTablesAssignment_4_3_1()); }
	(rule__DbaseModel__TablesAssignment_4_3_1)
	{ after(grammarAccess.getDbaseModelAccess().getTablesAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getTableAction_0()); }
	()
	{ after(grammarAccess.getTableAccess().getTableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getTableKeyword_1()); }
	'Table'
	{ after(grammarAccess.getTableAccess().getTableKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getNameAssignment_2()); }
	(rule__Table__NameAssignment_2)
	{ after(grammarAccess.getTableAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__4__Impl
	rule__Table__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_4()); }
	(rule__Table__Group_4__0)?
	{ after(grammarAccess.getTableAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__5__Impl
	rule__Table__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_5()); }
	(rule__Table__Group_5__0)?
	{ after(grammarAccess.getTableAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__6__Impl
	rule__Table__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_6()); }
	(rule__Table__Group_6__0)?
	{ after(grammarAccess.getTableAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_4__0__Impl
	rule__Table__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getEntityKeyword_4_0()); }
	'entity'
	{ after(grammarAccess.getTableAccess().getEntityKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getEntityAssignment_4_1()); }
	(rule__Table__EntityAssignment_4_1)
	{ after(grammarAccess.getTableAccess().getEntityAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5__0__Impl
	rule__Table__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColumnsKeyword_5_0()); }
	'columns'
	{ after(grammarAccess.getTableAccess().getColumnsKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5__1__Impl
	rule__Table__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_5_1()); }
	'{'
	{ after(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5__2__Impl
	rule__Table__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColumnsAssignment_5_2()); }
	(rule__Table__ColumnsAssignment_5_2)
	{ after(grammarAccess.getTableAccess().getColumnsAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5__3__Impl
	rule__Table__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_5_3()); }
	(rule__Table__Group_5_3__0)*
	{ after(grammarAccess.getTableAccess().getGroup_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_5_4()); }
	'}'
	{ after(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_5_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5_3__0__Impl
	rule__Table__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getCommaKeyword_5_3_0()); }
	','
	{ after(grammarAccess.getTableAccess().getCommaKeyword_5_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColumnsAssignment_5_3_1()); }
	(rule__Table__ColumnsAssignment_5_3_1)
	{ after(grammarAccess.getTableAccess().getColumnsAssignment_5_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_6__0__Impl
	rule__Table__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getConstraintKeyword_6_0()); }
	'constraint'
	{ after(grammarAccess.getTableAccess().getConstraintKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_6__1__Impl
	rule__Table__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_6_1()); }
	'{'
	{ after(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_6__2__Impl
	rule__Table__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getConstraintAssignment_6_2()); }
	(rule__Table__ConstraintAssignment_6_2)
	{ after(grammarAccess.getTableAccess().getConstraintAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_6__3__Impl
	rule__Table__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_6_3()); }
	(rule__Table__Group_6_3__0)*
	{ after(grammarAccess.getTableAccess().getGroup_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_6_4()); }
	'}'
	{ after(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_6_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_6_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_6_3__0__Impl
	rule__Table__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getCommaKeyword_6_3_0()); }
	','
	{ after(grammarAccess.getTableAccess().getCommaKeyword_6_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_6_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getConstraintAssignment_6_3_1()); }
	(rule__Table__ConstraintAssignment_6_3_1)
	{ after(grammarAccess.getTableAccess().getConstraintAssignment_6_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Column__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__0__Impl
	rule__Column__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getColumnAction_0()); }
	()
	{ after(grammarAccess.getColumnAccess().getColumnAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__1__Impl
	rule__Column__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getColumnKeyword_1()); }
	'Column'
	{ after(grammarAccess.getColumnAccess().getColumnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__2__Impl
	rule__Column__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getNameAssignment_2()); }
	(rule__Column__NameAssignment_2)
	{ after(grammarAccess.getColumnAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__3__Impl
	rule__Column__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getColumnAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__4__Impl
	rule__Column__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getGroup_4()); }
	(rule__Column__Group_4__0)?
	{ after(grammarAccess.getColumnAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getColumnAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Column__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group_4__0__Impl
	rule__Column__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getTypeKeyword_4_0()); }
	'type'
	{ after(grammarAccess.getColumnAccess().getTypeKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getTypeAssignment_4_1()); }
	(rule__Column__TypeAssignment_4_1)
	{ after(grammarAccess.getColumnAccess().getTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getConstraintKeyword_0()); }
	'Constraint'
	{ after(grammarAccess.getConstraintAccess().getConstraintKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__1__Impl
	rule__Constraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getNameAssignment_1()); }
	(rule__Constraint__NameAssignment_1)
	{ after(grammarAccess.getConstraintAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__2__Impl
	rule__Constraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__3__Impl
	rule__Constraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getGroup_3()); }
	(rule__Constraint__Group_3__0)?
	{ after(grammarAccess.getConstraintAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__4__Impl
	rule__Constraint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getColumnKeyword_4()); }
	'column'
	{ after(grammarAccess.getConstraintAccess().getColumnKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__5__Impl
	rule__Constraint__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getColumnAssignment_5()); }
	(rule__Constraint__ColumnAssignment_5)
	{ after(grammarAccess.getConstraintAccess().getColumnAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__6__Impl
	rule__Constraint__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getGroup_6()); }
	(rule__Constraint__Group_6__0)?
	{ after(grammarAccess.getConstraintAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_3__0__Impl
	rule__Constraint__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getConstraintTypeKeyword_3_0()); }
	'constraintType'
	{ after(grammarAccess.getConstraintAccess().getConstraintTypeKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getConstraintTypeAssignment_3_1()); }
	(rule__Constraint__ConstraintTypeAssignment_3_1)
	{ after(grammarAccess.getConstraintAccess().getConstraintTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_6__0__Impl
	rule__Constraint__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getRelationshipKeyword_6_0()); }
	'relationship'
	{ after(grammarAccess.getConstraintAccess().getRelationshipKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_6__1__Impl
	rule__Constraint__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_6_1()); }
	'{'
	{ after(grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_6__2__Impl
	rule__Constraint__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getRelationshipAssignment_6_2()); }
	(rule__Constraint__RelationshipAssignment_6_2)
	{ after(grammarAccess.getConstraintAccess().getRelationshipAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_6__3__Impl
	rule__Constraint__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getGroup_6_3()); }
	(rule__Constraint__Group_6_3__0)*
	{ after(grammarAccess.getConstraintAccess().getGroup_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_6__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_6__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_6_4()); }
	'}'
	{ after(grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_6_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_6_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_6_3__0__Impl
	rule__Constraint__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_6_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getCommaKeyword_6_3_0()); }
	','
	{ after(grammarAccess.getConstraintAccess().getCommaKeyword_6_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_6_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_6_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getRelationshipAssignment_6_3_1()); }
	(rule__Constraint__RelationshipAssignment_6_3_1)
	{ after(grammarAccess.getConstraintAccess().getRelationshipAssignment_6_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__0__Impl
	rule__Relationship__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getRelationshipKeyword_0()); }
	'Relationship'
	{ after(grammarAccess.getRelationshipAccess().getRelationshipKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__1__Impl
	rule__Relationship__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getRelationshipAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__2__Impl
	rule__Relationship__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getGroup_2()); }
	(rule__Relationship__Group_2__0)?
	{ after(grammarAccess.getRelationshipAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__3__Impl
	rule__Relationship__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getTableKeyword_3()); }
	'table'
	{ after(grammarAccess.getRelationshipAccess().getTableKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__4__Impl
	rule__Relationship__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getTableAssignment_4()); }
	(rule__Relationship__TableAssignment_4)
	{ after(grammarAccess.getRelationshipAccess().getTableAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getRelationshipAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group_2__0__Impl
	rule__Relationship__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getCardinalityTypeKeyword_2_0()); }
	'cardinalityType'
	{ after(grammarAccess.getRelationshipAccess().getCardinalityTypeKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getCardinalityTypeAssignment_2_1()); }
	(rule__Relationship__CardinalityTypeAssignment_2_1)
	{ after(grammarAccess.getRelationshipAccess().getCardinalityTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DbaseModel__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDbaseModelAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getDbaseModelAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__TablesAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDbaseModelAccess().getTablesTableParserRuleCall_4_2_0()); }
		ruleTable
		{ after(grammarAccess.getDbaseModelAccess().getTablesTableParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DbaseModel__TablesAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDbaseModelAccess().getTablesTableParserRuleCall_4_3_1_0()); }
		ruleTable
		{ after(grammarAccess.getDbaseModelAccess().getTablesTableParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getTableAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__EntityAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getEntityEStringParserRuleCall_4_1_0()); }
		ruleEString
		{ after(grammarAccess.getTableAccess().getEntityEStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ColumnsAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_5_2_0()); }
		ruleColumn
		{ after(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ColumnsAssignment_5_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_5_3_1_0()); }
		ruleColumn
		{ after(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_5_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ConstraintAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getConstraintConstraintParserRuleCall_6_2_0()); }
		ruleConstraint
		{ after(grammarAccess.getTableAccess().getConstraintConstraintParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ConstraintAssignment_6_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getConstraintConstraintParserRuleCall_6_3_1_0()); }
		ruleConstraint
		{ after(grammarAccess.getTableAccess().getConstraintConstraintParserRuleCall_6_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getColumnAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__TypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getTypeColumnTypeEnumRuleCall_4_1_0()); }
		ruleColumnType
		{ after(grammarAccess.getColumnAccess().getTypeColumnTypeEnumRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getConstraintAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ConstraintTypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getConstraintTypeConstraintTypeEnumRuleCall_3_1_0()); }
		ruleConstraintType
		{ after(grammarAccess.getConstraintAccess().getConstraintTypeConstraintTypeEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ColumnAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getColumnColumnParserRuleCall_5_0()); }
		ruleColumn
		{ after(grammarAccess.getConstraintAccess().getColumnColumnParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__RelationshipAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getRelationshipRelationshipParserRuleCall_6_2_0()); }
		ruleRelationship
		{ after(grammarAccess.getConstraintAccess().getRelationshipRelationshipParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__RelationshipAssignment_6_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getRelationshipRelationshipParserRuleCall_6_3_1_0()); }
		ruleRelationship
		{ after(grammarAccess.getConstraintAccess().getRelationshipRelationshipParserRuleCall_6_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__CardinalityTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipAccess().getCardinalityTypeCardinalityTypeEnumRuleCall_2_1_0()); }
		ruleCardinalityType
		{ after(grammarAccess.getRelationshipAccess().getCardinalityTypeCardinalityTypeEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__TableAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipAccess().getTableTableParserRuleCall_4_0()); }
		ruleTable
		{ after(grammarAccess.getRelationshipAccess().getTableTableParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
