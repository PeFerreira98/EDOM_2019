/**
 * generated by Xtext 2.12.0
 */
package pt.isep.edom.project.c2.dsl.rest.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import pt.isep.edom.project.c2.dsl.rest.services.RestGrammarAccess;
import pt.isep.edom.project.c2.mm.rest.Resource;
import pt.isep.edom.project.c2.mm.rest.RestModel;

@SuppressWarnings("all")
public class RestFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private RestGrammarAccess _restGrammarAccess;
  
  protected void _format(final RestModel restModel, @Extension final IFormattableDocument document) {
    EList<Resource> _resources = restModel.getResources();
    for (final Resource resource : _resources) {
      document.<Resource>format(resource);
    }
  }
  
  protected void _format(final Resource resource, @Extension final IFormattableDocument document) {
    EList<Resource> _subresource = resource.getSubresource();
    for (final Resource _resource : _subresource) {
      document.<Resource>format(_resource);
    }
  }
  
  public void format(final Object resource, final IFormattableDocument document) {
    if (resource instanceof XtextResource) {
      _format((XtextResource)resource, document);
      return;
    } else if (resource instanceof Resource) {
      _format((Resource)resource, document);
      return;
    } else if (resource instanceof RestModel) {
      _format((RestModel)resource, document);
      return;
    } else if (resource instanceof EObject) {
      _format((EObject)resource, document);
      return;
    } else if (resource == null) {
      _format((Void)null, document);
      return;
    } else if (resource != null) {
      _format(resource, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(resource, document).toString());
    }
  }
}
