// automatically generated by Xtext
grammar pt.isep.edom.project.c3.dsl.Domain with org.eclipse.xtext.common.Terminals

import "http://www.example.org/domain" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

DomainModel returns DomainModel:
	{DomainModel}
	'DomainModel'
	name=EString
	'{'
		('entities' '{' entities+=Entity ( "," entities+=Entity)* '}' )?
		('valueobject' '{' valueobject+=ValueObject ( "," valueobject+=ValueObject)* '}' )?
	'}';





EString returns ecore::EString:
	STRING | ID;

Entity returns Entity:
	root?='root'
	'Entity'
	name=EString
	'{'
		('fields' '{' fields+=Field ( "," fields+=Field)* '}' )?
		('references' '{' references+=Reference ( "," references+=Reference)* '}' )?
	'}';

ValueObject returns ValueObject:
	isId?='isId'
	'ValueObject'
	name=EString
	'{'
		'field' field=Field
	'}';

Field returns Field:
	{Field}
	'Field'
	name=EString
	'{'
		('type' type=FieldType)?
	'}';

Reference returns Reference:
	'Reference'
	name=EString
	'{'
		'upperBound' upperBound=EInt
		'lowerBound' lowerBound=EInt
		('entity' entity=[Entity|EString])?
		('valueobject' valueobject=[ValueObject|EString])?
	'}';

EBoolean returns ecore::EBoolean:
	'true' | 'false';

enum FieldType returns FieldType:
				STRING = 'STRING' | INTEGER = 'INTEGER' | REAL = 'REAL' | BOOL = 'BOOL';

EInt returns ecore::EInt:
	'-'? INT;
