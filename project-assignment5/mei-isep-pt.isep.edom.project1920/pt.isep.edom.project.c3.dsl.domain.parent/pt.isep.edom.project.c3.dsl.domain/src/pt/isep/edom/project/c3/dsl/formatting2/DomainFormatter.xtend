/*
 * generated by Xtext 2.19.0
 */
package pt.isep.edom.project.c3.dsl.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import pt.isep.edom.project.c3.dsl.services.DomainGrammarAccess
import pt.isep.edom.project.c3.mm.domain.DomainModel
import pt.isep.edom.project.c3.mm.domain.Entity

class DomainFormatter extends AbstractFormatter2 {
	
	@Inject extension DomainGrammarAccess

	def dispatch void format(DomainModel domainModel, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (entity : domainModel.entities) {
			entity.format
		}
		for (valueObject : domainModel.valueobject) {
			valueObject.format
		}
	}

	def dispatch void format(Entity entity, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (field : entity.fields) {
			field.format
		}
		for (reference : entity.references) {
			reference.format
		}
	}
	
	// TODO: implement for ValueObject
}
